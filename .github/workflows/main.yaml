# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          lfs: true

      # Install OpenVINO
      - name: Install OpenVINO
        uses: ./.github/actions/install-openvino
      
      - name: Build Wasmtime + wasi-nn
        run: |
          rustup target add wasm32-wasi
          rustup target add wasm32-unknown-unknown
          git clone https://github.com/bytecodealliance/wasmtime -b v0.26.0 --depth 1 --recursive
          cd wasmtime
          OPENVINO_INSTALL_DIR=/opt/intel/openvino cargo build -p wasmtime-cli --features wasi-nn --release
          sudo ln -s $(realpath target/release/wasmtime) /usr/local/bin/wasmtime

      # Runs a single command using the runners shell
      - name: Build and run Rust example
        run: |
          echo Building and running the Rust Wasi-NN example
          ./build.sh rust

      # Runs a set of commands using the runners shell
      - name: Build and run AssemblyScript example
        run: |
          echo Building and running the Rust Wasi-NN example
          ./build.sh as

      # Test we can publish to NPM
      - name: Publish NPM dryrun
        run: |
          echo Publish NPM dryrun
          cd assemblyscript
          npm publish --dry-run
          
      # Test we can publish to crates.io
      - name: Publish crates.io dryrun
        run: |
          echo Publish crates.io dryrun
          cd rust
          cargo publish --dry-run
